<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>info.danbecker.dba</groupId>
    <artifactId>DBAArmy</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>DBAArmy</name>

    <properties>
        <maven.compiler.source>23</maven.compiler.source>
        <maven.compiler.target>23</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.11.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
    <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>3.0</version>
    </dependency>
    <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>5.9</version>
    </dependency>
    <dependency>
        <groupId>org.jcommander</groupId>
        <artifactId>jcommander</artifactId>
        <version>2.0</version>
    </dependency>	 
    <dependency>
        <!-- JSON in Java https://github.com/stleary/JSON-java -->
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>20240303</version>
    </dependency>
    <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-runtime</artifactId>
        <version>4.13.2</version>
    </dependency>
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <scope>test</scope>
    </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>23</source>
                    <target>23</target>
                    <compilerArgs>--enable-preview</compilerArgs>
                </configuration>
            </plugin>
            <!-- Plugin to compile the ANTLR grammar g4 files ahead of the java files.
                 See https://github.com/antlr/antlr4/blob/master/antlr4-maven-plugin/src/site/apt/examples/simple.apt.vm
                 To use this plugin, type:
                   mvn antlr4:antlr4
                   mvn antlr4:help
                 Maven will invoke this plugin before the Java source is compiled
              -->
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.13.2</version>
                <configuration>
                    <arguments>
                        <argument>-package</argument>
                        <argument>info.danbecker.dba</argument>
                    </arguments>
                    <sourceDirectory>${basedir}/src/main/antlr4/info/danbecker/dba</sourceDirectory>
                    <outputDirectory>${project.build.directory}/generated-sources/antlr4/info/danbecker/dba</outputDirectory>
                    <!-- <outputDirectory>src/main/generated-sources/antlr4/info/danbecker/dba</outputDirectory> -->
                    <visitor>true</visitor>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Plugin to create a self-contained portable package.
                 This allows us to execute our application like this:
                 java -cp target/app-name-1.0-jar-with-dependencies.jar info.danbecker.project.App
               -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>simple-command</id>
                        <phase>package</phase>
                        <!-- <goals><goal>attached</goal></goals> -->
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>